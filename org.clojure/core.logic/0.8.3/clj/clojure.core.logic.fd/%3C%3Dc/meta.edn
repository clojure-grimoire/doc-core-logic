{:ns "clojure.core.logic.fd", :name "<=c", :file "clojure/core/logic/fd.clj", :type :fn, :src "(defn <=c [u v]\n  (reify \n    IEnforceableConstraint\n    clojure.lang.IFn\n    (invoke [this s]\n      (let-dom s [u du v dv]\n        (let [umin (lb du)\n              vmax (ub dv)]\n         ((composeg*\n           (process-dom u (keep-before du (inc vmax)))\n           (process-dom v (drop-before dv umin))) s))))\n    IConstraintOp\n    (rator [_] `<=)\n    (rands [_] [u v])\n    IRelevant\n    (-relevant? [this s]\n      (let-dom s [u du v dv]\n       (if (and (domain? du) (domain dv))\n         (not (interval-<= du dv))\n         true)))\n    IRunnable\n    (runnable? [this s]\n      (let-dom s [u du v dv]\n        (and (domain? du) (domain? dv))))\n    IConstraintWatchedStores\n    (watched-stores [this]\n      #{::l/subst ::l/fd})))", :column 1, :line 812, :arglists ([u v])}