{:ns "clojure.core.logic", :name "unify-with-pmap*", :file "clojure/core/logic.clj", :type :fn, :src "(defn unify-with-pmap* [u v s]\n  (loop [ks (keys u) s s]\n    (if (seq ks)\n      (let [kf (first ks)\n            vf (get v kf ::not-found)\n            uf (get u kf)]\n        (if (= vf ::not-found)\n          (if (= uf ::not-found)\n            (recur (next ks) s)\n            nil)\n          (if (= uf ::not-found)\n            nil\n            (if-let [s (unify s uf vf)]\n              (recur (next ks) s)\n              nil))))\n      s)))", :column 1, :line 2589, :arglists ([u v s])}