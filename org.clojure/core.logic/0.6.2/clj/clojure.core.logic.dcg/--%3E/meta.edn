{:ns "clojure.core.logic.dcg", :name "-->", :file "clojure/core/logic/dcg.clj", :type :macro, :src "(defmacro --> [name & clauses]\n  (let [r (range 1 (+ (count-clauses clauses) 2))\n        lsyms (into [] (map lsym r))\n        clauses (mark-clauses clauses)\n        clauses (handle-clauses lsyms clauses)]\n    `(defn ~name [~(first lsyms) ~(last lsyms)]\n       (exist [~@(butlast (rest lsyms))]\n         ~@clauses))))", :column 1, :line 84, :macro true, :arglists ([name & clauses])}