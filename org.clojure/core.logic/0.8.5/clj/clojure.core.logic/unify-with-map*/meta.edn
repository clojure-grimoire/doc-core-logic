{:ns "clojure.core.logic", :name "unify-with-map*", :file "clojure/core/logic.clj", :type :fn, :src "(defn unify-with-map* [u v s]\n  (when (clojure.core/== (count u) (count v))\n    (loop [ks (keys u) s s]\n      (if (seq ks)\n        (let [kf (first ks)\n              vf (get v kf ::not-found)]\n          (when-not (identical? vf ::not-found)\n            (if-let [s (unify s (get u kf) vf)]\n              (recur (next ks) s)\n              nil)))\n        s))))", :column 1, :line 895, :arglists ([u v s])}