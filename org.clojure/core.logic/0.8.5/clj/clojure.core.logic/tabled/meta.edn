{:ns "clojure.core.logic", :name "tabled", :file "clojure/core/logic.clj", :type :macro, :src "(defmacro tabled\n  \"Macro for defining a tabled goal. Prefer ^:tabled with the\n  defne/a/u forms over using this directly.\"\n  [args & grest]\n  (let [uuid (symbol (str \"tabled-\" (UUID/randomUUID)))]\n    `(fn ~uuid [~@args]\n       (let [argv# ~args]\n         (fn [a#]\n           (let [key#    (-reify a# argv#)\n                 tables# (:ts a#)\n                 tables# (if-not (contains? @tables# ~uuid)\n                           (swap! tables#\n                             (fn [tables#]\n                               (if (contains? tables# ~uuid)\n                                 tables#\n                                 (assoc tables# ~uuid (atom {})))))\n                           @tables#)\n                 table#  (get tables# ~uuid)]\n             (if-not (contains? @table# key#)\n               (let [table# (swap! table#\n                              (fn [table#]\n                                (if (contains? table# key#)\n                                  table#\n                                  (assoc table# key# (atom (answer-cache))))))\n                     cache# (get table# key#)]\n                 ((fresh []\n                    ~@grest\n                    (master argv# cache#)) a#))\n               (let [cache# (get @table# key#)]\n                 (reuse a# argv# cache# nil nil)))))))))", :column 1, :line 1958, :macro true, :arglists ([args & grest]), :doc "Macro for defining a tabled goal. Prefer ^:tabled with the\n  defne/a/u forms over using this directly."}