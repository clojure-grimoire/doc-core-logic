{:ns "clojure.core.logic", :name "-featurec", :file "clojure/core/logic.clj", :type :fn, :src "(defn -featurec\n  [x fs]\n  (reify\n    IConstraintStep\n    (-step [this s]\n      (reify\n        clojure.lang.IFn\n        (invoke [_ s]\n          ((composeg\n             (== fs x)\n             (remcg this)) s))\n        IRunnable\n        (-runnable? [_]\n          (not (lvar? (walk s x))))))\n    IConstraintOp\n    (-rator [_] `featurec)\n    (-rands [_] [x])\n    IReifiableConstraint\n    (-reifyc [_ v r a]\n      (let [fs (into {} fs)\n            r  (-reify* r (walk* a fs))]\n        `(featurec ~(walk* r x) ~(walk* r fs))))\n    IConstraintWatchedStores\n    (-watched-stores [this] #{::subst})))", :column 1, :line 2474, :arglists ([x fs])}