{:ns "clojure.core.logic.bench", :name "subchecko", :file "clojure/core/logic/bench.clj", :type :fn, :src "(defne subchecko [w sl r o n]\n  ;; we have no more stones to test in sl to test w with\n  ([_ () _ _ _]\n     (fresh [hr]\n       (fd/in hr (fd/interval 1 n))\n       (matche [r o]\n         ;; r is not empty, we add w to the output only if\n         ;; w is head of r + 1\n         ([[hr . _] [w . r]] (fd/+ hr 1 w))\n         ;; r is empty, just add the weight\n         ;; only works for w == 1\n         ([() [w . r]]))))\n  ;; we have stones to in sl to test w with\n  ([_ [hsl . rsl] _ _ _]\n     (fresh [w-hsl w+hsl o0 o1 nw]\n       (fd/in hsl w-hsl w+hsl (fd/interval 1 n))\n       (fd/+ hsl w-hsl w) (fd/+ hsl w w+hsl)\n       ;; attempt to construct values prior w\n       (subchecko w-hsl rsl r  o0 n)\n       ;; attempt to construct values around w\n       (subchecko w     rsl o0 o1 n)\n       ;; attempt to construct values after w\n       (subchecko w+hsl rsl o1 o  n))))", :column 1, :line 505}