{:ns "cljs.core.logic.pldb", :name "db-rel", :file "cljs/core/logic/pldb.clj", :type :macro, :src "(defmacro db-rel [name & args]\n  (let [arity   (count args)\n        kname   (str name \"_\" arity)\n        indexes (vec (map indexed? args))]\n    `(def ~name\n       (with-meta\n         (fn [& query#]\n           (fn [subs#]\n             (let [dbs# (-> subs# meta :db)\n                   facts#\n                   (if-let [index# (cljs.core.logic.pldb/index-for-query\n                                     subs# query# ~indexes)]\n                     (cljs.core.logic.pldb/facts-using-index dbs# ~kname index#\n                       (cljs.core.logic/-walk* subs# (nth query# index#)))\n                     (cljs.core.logic.pldb/facts-for dbs# ~kname))]\n               (cljs.core.logic/to-stream\n                 (remove cljs.core.logic/failed?\n                   (map (fn [potential#]\n                          ((cljs.core.logic.macros/== query# potential#) subs#))\n                     facts#))))))\n         {:rel-name ~kname :indexes ~indexes}))))", :column 1, :line 14, :macro true, :arglists ([name & args])}