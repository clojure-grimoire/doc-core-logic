{:ns "clojure.core.logic.fd", :name "!=c", :file "clojure/core/logic/fd.clj", :type :fn, :src "(defn !=c [u v]\n  (reify \n    IEnforceableConstraint\n    clojure.lang.IFn\n    (invoke [this s]\n      (let-dom s [u du v dv]\n        (cond\n         (and (singleton-dom? du)\n              (singleton-dom? dv)\n              (= du dv)) nil\n         (disjoint? du dv) s\n         (singleton-dom? du)\n         (when-let [vdiff (difference dv du)]\n           ((process-dom v vdiff) s))\n         :else (when-let [udiff (difference du dv)]\n                 ((process-dom u udiff) s)))))\n    IConstraintOp\n    (rator [_] `!=)\n    (rands [_] [u v])\n    IRelevant\n    (-relevant? [this s]\n      (let-dom s [u du v dv]\n        (not (and (domain? du) (domain? dv) (disjoint? du dv)))))\n    IRunnable\n    (runnable? [this s]\n      (let-dom s [u du v dv]\n        ;; we are runnable if du and dv both have domains\n        ;; and at least du or dv has a singleton domain\n        (and (domain? du) (domain? dv)\n             (or (singleton-dom? du)\n                 (singleton-dom? dv)))))\n    IConstraintWatchedStores\n    (watched-stores [this]\n      #{::l/subst ::l/fd})))", :column 1, :line 766, :arglists ([u v])}