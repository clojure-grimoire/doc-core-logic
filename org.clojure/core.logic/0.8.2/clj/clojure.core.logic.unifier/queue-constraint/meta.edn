{:ns "clojure.core.logic.unifier", :name "queue-constraint", :file "clojure/core/logic/unifier.clj", :type :fn, :src "(defn queue-constraint [s c vs]\n  (cond\n    (vector? vs)\n    (queue s (unwrap (apply c (map #(lvar % false) vs))))\n\n    (set? vs)\n    (reduce (fn [s v] (queue s (unwrap (c (lvar v false))))) s vs)\n\n    (symbol? vs)\n    (queue s (unwrap (apply c (map #(lvar % false) (list vs)))))\n\n    :else\n    (throw\n     (Exception.\n      (str \"Only symbol, set of symbols, or vector of symbols allowed \"\n           \"on left hand side\")))))", :column 1, :line 71, :arglists ([s c vs])}