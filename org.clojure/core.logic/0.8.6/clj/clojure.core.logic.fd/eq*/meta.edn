{:ns "clojure.core.logic.fd", :name "eq*", :file "clojure/core/logic/fd.clj", :type :fn, :src "(defn eq*\n  ([form vars] (eq* form vars nil))\n  ([form vars out]\n     (if (seq? form)\n       (let [[op r1 r2] form\n             [outl outlv?] (if (seq? r1)\n                             (let [s (gensym)]\n                               (swap! vars conj s)\n                               [s true])\n                             [r1 false])\n             [outr outrv?] (if (seq? r2)\n                             (let [s (gensym)]\n                               (swap! vars conj s)\n                               [s true])\n                             [r2 false])\n             op (binops->fd op)]\n         (cons (if out\n                 (list op outl outr out)\n                 (list op outl outr))\n               (concat (when (seq? r1)\n                         (eq* r1 vars (when outlv? outl)))\n                       (when (seq? r2)\n                         (eq* r2 vars (when outrv? outr))))))\n       form)))", :column 1, :line 1119, :arglists ([form vars] [form vars out])}