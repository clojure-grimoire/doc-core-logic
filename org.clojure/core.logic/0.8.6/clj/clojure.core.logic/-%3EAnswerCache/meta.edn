{:type :fn, :src "(deftype AnswerCache [ansl anss _meta]\n  Object\n  (toString [this]\n    (str \"<answer-cache:\" (pr-str ansl) \">\"))\n\n  clojure.lang.IObj\n  (meta [_] _meta)\n  (withMeta [_ new-meta]\n    (AnswerCache. ansl anss new-meta))\n\n  clojure.lang.ILookup\n  (valAt [this k]\n    (.valAt this k nil))\n  (valAt [this k not-found]\n    (case k\n      :ansl ansl\n      :anss anss\n      not-found))\n\n  IAnswerCache\n  (-add [this x]\n    (AnswerCache. (conj ansl x) (conj anss x) _meta))\n  (-cached? [_ x]\n    (let [^clojure.lang.IPersistentSet anss anss]\n      (.contains anss x))))", :ns "clojure.core.logic", :name "->AnswerCache", :file "clojure/core/logic.clj", :column 1, :line 1783, :arglists ([ansl anss _meta]), :doc "Positional factory function for class clojure.core.logic.AnswerCache."}