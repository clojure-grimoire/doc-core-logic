{:ns "clojure.core.logic", :name "-run", :file "clojure/core/logic.clj", :type :macro, :src "(defmacro -run [opts [x :as bindings] & goals]\n  (if (> (count bindings) 1)\n    (let [[rbindings as-key [as]] (partition-by #{:as} bindings)]\n      (if (seq as-key)\n        `(-run ~opts [~as] (fresh [~@rbindings] (== ~as [~@rbindings]) ~@goals))\n        `(-run ~opts [q#] (fresh ~bindings (== q# ~bindings) ~@goals))))\n    `(let [opts# ~opts\n           xs# (take* (fn []\n                        ((fresh [~x]\n                           ~@goals\n                           (reifyg ~x))\n                         (tabled-s (:occurs-check opts#)\n                            (merge {:reify-vars true} opts#)))))]\n       (if-let [n# (:n opts#)]\n         (take n# xs#)\n         xs#))))", :column 1, :line 1189, :macro true, :arglists ([opts [x :as bindings] & goals])}