{:ns "clojure.core.logic", :name "unify-with-pmap*", :file "clojure/core/logic.clj", :type :fn, :src "(defn unify-with-pmap* [u v s]\n  (loop [ks (keys u) s s]\n    (if (seq ks)\n      (let [kf (first ks)\n            vf (get v kf ::not-found)]\n        (if (= vf ::not-found)\n          nil\n          (let [uf (get u kf) \n                vf (walk s vf)]\n            (if (lvar? vf)\n              (recur (next ks) ((featurec vf uf) s))\n              (if (map? uf)\n                (if-let [s (unify s (partial-map uf) vf)]\n                  (recur (next ks) s))\n                (if-let [s (unify s uf vf)]\n                  (recur (next ks) s)\n                  nil))))))\n      s)))", :column 1, :line 2429, :arglists ([u v s])}