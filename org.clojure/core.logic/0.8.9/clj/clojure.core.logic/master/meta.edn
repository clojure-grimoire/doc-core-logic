{:ns "clojure.core.logic", :name "master", :file "clojure/core/logic.clj", :type :fn, :src "(defn master\n  \"Take the argument to the goal and check that we don't\n   have an alpha equivalent cached answer term in the cache.\n   If it doesn't already exist in the cache add the new\n   answer term.\"\n  [argv cache]\n  (fn [a]\n    (let [rargv (-reify a argv)]\n      (when-not (-cached? @cache rargv)\n        (swap! cache\n          (fn [cache]\n            (if (-cached? cache rargv)\n              cache\n              (-add cache (reify-tabled a argv)))))\n        a))))", :column 1, :line 1955, :arglists ([argv cache]), :doc "Take the argument to the goal and check that we don't\n   have an alpha equivalent cached answer term in the cache.\n   If it doesn't already exist in the cache add the new\n   answer term."}