{:ns "clojure.core.logic.pldb", :name "db-rel", :file "clojure/core/logic/pldb.clj", :type :macro, :src "(defmacro db-rel [name & args]\n  (let [arity\n        (count args)\n\n        kname\n        (str name \"_\" arity)\n\n        indexes\n        (vec (map indexed? args))]\n    `(def ~name\n       (with-meta\n         (fn [& query#]\n           (fn [subs#]\n             (let [dbs#\n                   (-> subs# clojure.core/meta :db)\n\n                   facts#\n                   (if-let [index# (index-for-query subs# query# ~indexes)]\n                     (facts-using-index dbs#\n                                        ~kname\n                                        index#\n                                        (l/walk* subs# (nth query# index#)))\n                     (facts-for dbs# ~kname))]\n               (l/to-stream (map (fn [potential#]\n                                   ((l/== query# potential#) subs#))\n                                 facts#)))))\n         {:rel-name ~kname\n          :indexes ~indexes}))))", :column 1, :line 48, :macro true, :arglists ([name & args])}