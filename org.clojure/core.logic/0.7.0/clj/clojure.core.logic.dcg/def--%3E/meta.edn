{:ns "clojure.core.logic.dcg", :name "def-->", :file "clojure/core/logic/dcg.clj", :type :macro, :src "(defmacro def--> [name args & clauses]\n  (let [r (range 1 (+ (count-clauses clauses) 2))\n        lsyms (map lsym r)\n        clauses (mark-clauses clauses)\n        clauses (handle-clauses lsyms clauses)]\n   `(defn ~name [~@args ~(first lsyms) ~(last lsyms)]\n      (fresh [~@(butlast (rest lsyms))]\n        ~@clauses))))", :column 1, :line 92, :macro true, :arglists ([name args & clauses])}