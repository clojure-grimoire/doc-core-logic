{:ns "clojure.core.logic", :name "-predc", :file "clojure/core/logic.clj", :type :fn, :src "(defn -predc\n  ([x p] (-predc x p p))\n  ([x p pform]\n     (reify\n       clojure.lang.IFn\n       (invoke [this a]\n         (let [x (walk a x)]\n           (when (p x)\n             ((remcg this) a))))\n       IConstraintOp\n       (rator [_] (if (seq? pform)\n                    `(predc ~pform)\n                    `predc))\n       (rands [_] [x])\n       IReifiableConstraint\n       (reifyc [c v r a]\n         (if (and (not= p pform) (fn? pform))\n           (pform c v r a)\n           pform))\n       IRunnable\n       (runnable? [_ a]\n         (not (lvar? (walk a x))))\n       IConstraintWatchedStores\n       (watched-stores [this] #{::subst}))))", :column 1, :line 2743, :arglists ([x p] [x p pform])}