{:type :fn, :src "(deftype Choice [a f]\n  clojure.lang.ILookup\n  (valAt [this k]\n    (.valAt this k nil))\n  (valAt [this k not-found]\n    (case k\n      :a a\n      not-found))\n  IBind\n  (bind [this g]\n    (mplus (g a) (fn [] (bind f g))))\n  IMPlus\n  (mplus [this fp]\n    (Choice. a (fn [] (mplus (fp) f))))\n  ITake\n  (take* [this]\n    (lazy-seq (cons (first a) (lazy-seq (take* f))))))", :ns "clojure.core.logic", :name "->Choice", :file "clojure/core/logic.clj", :column 1, :line 1052, :arglists ([a f]), :doc "Positional factory function for class clojure.core.logic.Choice."}