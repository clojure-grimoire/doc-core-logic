{:ns "clojure.core.logic.fd", :name "difference*", :file "clojure/core/logic/fd.clj", :type :fn, :src "(defn difference* [is js]\n    (loop [is (seq (intervals is)) js (seq (intervals js)) r []]\n      (if is\n        (if js\n          (let [i (first is)\n                j (first js)]\n            (cond\n             (interval-< i j) (recur (next is) js (conj r i))\n             (interval-> i j) (recur is (next js) r)\n             :else\n             (let [[imin imax] (bounds i)\n                   [jmin jmax] (bounds j)]\n               (cond\n                (core/< imin jmin)\n                (cond\n                 (core/< jmax imax)\n                 (recur (cons (interval (inc jmax) imax) (next is))\n                        (next js)\n                        (conj r (interval imin (dec jmin))))\n                 (core/> jmax imax)\n                 (recur (next is)\n                        (cons (interval (inc imax) jmax) (next js))\n                        (conj r (interval imin (dec jmin))))\n                 :else\n                 (recur (next is) (next js)\n                        (conj r (interval imin (dec jmin)))))\n                (core/>= imin jmin)\n                (cond\n                 (core/< imax jmax)\n                 (recur (next is)\n                        (cons (interval (inc imax) jmax) (next js))\n                        r)\n                 (core/> imax jmax)\n                 (recur (cons (interval (inc jmax) imax) (next is))\n                        (next js)\n                        r)\n                 :else (recur (next is) (next js)\n                              r))))))\n          (apply multi-interval (into r is)))\n        (apply multi-interval r))))", :column 1, :line 425, :arglists ([is js])}