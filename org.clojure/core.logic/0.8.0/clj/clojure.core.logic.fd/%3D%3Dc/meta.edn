{:ns "clojure.core.logic.fd", :name "==c", :file "clojure/core/logic/fd.clj", :type :fn, :src "(defn ==c [u v]\n  (reify\n    IEnforceableConstraint\n    clojure.lang.IFn\n    (invoke [this s]\n      (let-dom s [u du v dv]\n        (let [i (intersection du dv)]\n          ((composeg\n            (process-dom u i)\n            (process-dom v i)) s))))\n    IConstraintOp\n    (rator [_] `==)\n    (rands [_] [u v])\n    IRelevant\n    (-relevant? [this s]\n      (let-dom s [u du v dv]\n        (cond\n         (not (singleton-dom? du)) true\n         (not (singleton-dom? dv)) true\n         :else (not= du dv))))\n    IRunnable\n    (runnable? [this s]\n      (let-dom s [u du v dv]\n        (and (domain? du) (domain? dv))))\n    IConstraintWatchedStores\n    (watched-stores [this]\n      #{::l/subst ::l/fd})))", :column 1, :line 731, :arglists ([u v])}