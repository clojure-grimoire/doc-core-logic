{:ns "clojure.core.logic.fd", :name "-distinctc", :file "clojure/core/logic/fd.clj", :type :fn, :src "(defn -distinctc\n  \"The real *individual* distinct constraint. x is a var that now is bound to\n   a single value. y* were the non-singleton bound vars that existed at the\n   construction of the constraint. n* is the set of singleton domain values \n   that existed at the construction of the constraint. We use categorize to \n   determine the current non-singleton bound vars and singleton vlaues. if x\n   is in n* or the new singletons we have failed. If not we simply remove \n   the value of x from the remaining non-singleton domains bound to vars.\"\n  [x y* n*]\n  (reify\n    IEnforceableConstraint\n    clojure.lang.IFn\n    (invoke [this s]\n      (let [x (walk s x)]\n        (when-not (n* x)\n          (loop [y* (seq y*) s s]\n            (if y*\n              (let [y (first y*)\n                    v (or (get-dom s y) (walk s y))\n                    s (if-not (lvar? v)\n                        (cond\n                          (= x v) nil\n                          (member? v x) ((process-dom y (difference v x)) s)\n                          :else s)\n                        s)]\n                (when s\n                  (recur (next y*) s)))\n              ((remcg this) s))))))\n    IConstraintOp\n    (rator [_] `-distinct)\n    (rands [_] [x])\n    IRunnable\n    (runnable? [this s]\n      ;; we can only run if x is is bound to\n      ;; a single value\n      (singleton-dom? (walk s x)))\n    IConstraintWatchedStores\n    (watched-stores [this] #{::l/subst})))", :column 1, :line 1010, :arglists ([x y* n*]), :doc "The real *individual* distinct constraint. x is a var that now is bound to\n   a single value. y* were the non-singleton bound vars that existed at the\n   construction of the constraint. n* is the set of singleton domain values \n   that existed at the construction of the constraint. We use categorize to \n   determine the current non-singleton bound vars and singleton vlaues. if x\n   is in n* or the new singletons we have failed. If not we simply remove \n   the value of x from the remaining non-singleton domains bound to vars."}