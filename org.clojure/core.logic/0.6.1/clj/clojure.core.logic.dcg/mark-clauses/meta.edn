{:ns "clojure.core.logic.dcg", :name "mark-clauses", :file "clojure/core/logic/dcg.clj", :type :fn, :src "(defn mark-clauses\n  ([cs] (mark-clauses cs (atom 0)))\n  ([[c & r :as cs] i]\n     (cond\n      (nil? (seq cs)) ()\n      (exist? c) (cons `(exist ~(second c)\n                          ~@(mark-clauses (drop 2 c) i))\n                       (mark-clauses r i))\n      (!dcg? c) (cons c (mark-clauses r i))\n      :else (cons (with-meta c\n                    {:index (swap! i clojure.core/inc)})\n                  (mark-clauses r i)))))", :column 1, :line 50, :arglists ([cs] [[c & r :as cs] i])}