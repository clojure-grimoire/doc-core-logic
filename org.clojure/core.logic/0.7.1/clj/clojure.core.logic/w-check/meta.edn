{:ns "clojure.core.logic", :name "w-check", :file "clojure/core/logic.clj", :type :fn, :src "(defn w-check [w sk fk]\n  (loop [w w a []]\n    (cond\n     (nil? w) (fk)\n     (ready? (first w)) (sk\n                         (fn []\n                           (let [^SuspendedStream ss (first w)\n                                 f (.f ss)\n                                 w (to-w (concat a (next w)))]\n                             (if (empty? w)\n                               (f)\n                               (mplus (f) (fn [] w))))))\n     :else (recur (next w) (conj a (first w))))))", :column 1, :line 1706, :arglists ([w sk fk])}