{:type :fn, :src "(deftype Pair [lhs rhs]\n  clojure.lang.ILookup\n  (valAt [this k]\n    (.valAt this k nil))\n  (valAt [this k not-found]\n    (case k\n      :lhs lhs\n      :rhs rhs\n      not-found))\n\n  clojure.lang.Counted\n  (count [_] 2)\n\n  clojure.lang.Indexed\n  (nth [_ i] (case i\n                   0 lhs\n                   1 rhs\n                   (throw (IndexOutOfBoundsException.))))\n  (nth [_ i not-found] (case i\n                             0 lhs\n                             1 rhs\n                             not-found))\n\n  java.util.Map$Entry\n  (getKey [_] lhs)\n  (getValue [_] rhs)\n\n  Object\n  (toString [_]\n    (str \"(\" lhs \" . \" rhs \")\"))\n\n  (equals [_ o]\n    (if (instance? Pair o)\n      (and (= lhs (:lhs o))\n           (= rhs (:rhs o)))\n      false)))", :ns "clojure.core.logic", :name "->Pair", :file "clojure/core/logic.clj", :column 1, :line 36, :arglists ([lhs rhs]), :doc "Positional factory function for class clojure.core.logic.Pair."}