{:ns "clojure.core.logic", :name "merge-with-root", :file "clojure/core/logic.clj", :type :fn, :src "(defn merge-with-root [s x root]\n  (let [xv    (root-val s x)\n        rootv (root-val s root)\n        eset  (set/union (:eset rootv) (:eset xv))\n        doms (loop [xd (seq (:doms xv)) rd (:doms rootv) r {}]\n               (if xd\n                 (let [[xk xv] (first xd)]\n                   (if-let [[_ rv] (find rd xk)]\n                     (let [nd (-merge-doms xv rv)]\n                       (when nd\n                         (recur (next xd)\n                           (dissoc rd xk) (assoc r xk nd))))\n                     (recur (next xd) rd (assoc r xk xv))))\n                 (merge r rd)))\n        nv (when doms\n             (subst-val (:v rootv) doms eset\n               (merge (meta xv) (meta rootv))))]\n    (when nv\n      (-> s\n        (ext-no-check root nv)\n        (update-eset doms eset)))))", :column 1, :line 572, :arglists ([s x root])}