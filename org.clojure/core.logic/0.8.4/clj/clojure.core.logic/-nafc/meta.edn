{:ns "clojure.core.logic", :name "-nafc", :file "clojure/core/logic.clj", :type :fn, :src "(defn -nafc\n  ([c args]\n    (reify\n      IConstraintStep\n      (-step [this s]\n        (reify\n           clojure.lang.IFn\n           (invoke [_ s]\n             (when-not (tramp ((apply c args) s))\n               ((remcg this) s)))\n           IRunnable\n           (-runnable? [_]\n             (every? #(ground-term? % s) args))))\n      IConstraintOp\n      (-rator [_]\n        `nafc)\n      (-rands [_]\n        (vec (concat [c] args)))\n      IReifiableConstraint\n      (-reifyc [_ v r s]\n        `(nafc ~c ~@(-reify s args r)))\n      IConstraintWatchedStores\n      (-watched-stores [this] #{::subst}))))", :column 1, :line 2814, :arglists ([c args])}