{:ns "clojure.core.logic.fd", :name "<=c", :file "clojure/core/logic/fd.clj", :type :fn, :src "(defn <=c [u v]\n  (reify \n    IEnforceableConstraint\n    IConstraintStep\n    (-step [this s]\n      (let-dom s [u du v dv]\n        (reify\n          clojure.lang.IFn\n          (invoke [_ s]\n            (let [umin (-lb du)\n                  vmax (-ub dv)]\n              ((composeg*\n                 (process-dom u (-keep-before du (inc vmax)) du)\n                 (process-dom v (-drop-before dv umin) dv)) s)))\n          IEntailed\n          (-entailed? [_]\n            (and du dv (interval-<= du dv)))\n          IRunnable\n          (-runnable? [_]\n            (and du dv)))))\n    IConstraintOp\n    (-rator [_] `<=)\n    (-rands [_] [u v])\n    IConstraintWatchedStores\n    (-watched-stores [this]\n      #{::l/subst ::l/fd})))", :column 1, :line 792, :arglists ([u v])}