{:ns "clojure.core.logic", :name "fix-constraints", :file "clojure/core/logic.clj", :type :fn, :src "(defn fix-constraints\n  \"A goal to run the constraints in cq until it is empty. Of\n   course running a constraint may grow cq so this function\n   finds the fixpoint.\"\n  [a]\n  (loop [a a]\n    (when a\n      (let [cq (:cq a)]\n        (if (zero? (count cq))\n          (assoc a :cq nil)\n          (let [c (first cq)]\n            (recur\n              ((run-constraint c)\n               (-> a\n                 (assoc :cq (subvec (:cq a) 1))\n                 (assoc :cqs (disj (:cqs a) (id c))))))))))))", :column 1, :line 2088, :arglists ([a]), :doc "A goal to run the constraints in cq until it is empty. Of\n   course running a constraint may grow cq so this function\n   finds the fixpoint."}