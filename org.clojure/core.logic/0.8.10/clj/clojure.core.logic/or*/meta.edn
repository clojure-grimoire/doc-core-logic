{:ns "clojure.core.logic", :name "or*", :file "clojure/core/logic.clj", :type :fn, :src "(defn or*\n  \"A function version of conde, which takes a list of goals and tries them as if via conde.\n   Note that or* only does disjunction, ie (or* [a b c]) is the same as (conde [a] [b] [c]).\n   If you need something like (conde [a b] [c]), you can use and*, or all:\n   (or* [(and* a b) c]).\"\n  [goals]\n  (letfn [(mplus'\n            ([e] e)\n            ([e & es]\n               (mplus e (fn [] (apply mplus' es)))))]\n   (fn [a]\n     (fn []\n       (apply mplus' (for [goal goals]\n                       (bind a goal)))))))", :column 1, :line 1185, :arglists ([goals]), :doc "A function version of conde, which takes a list of goals and tries them as if via conde.\n   Note that or* only does disjunction, ie (or* [a b c]) is the same as (conde [a] [b] [c]).\n   If you need something like (conde [a b] [c]), you can use and*, or all:\n   (or* [(and* a b) c])."}