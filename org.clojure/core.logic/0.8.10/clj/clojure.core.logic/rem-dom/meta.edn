{:ns "clojure.core.logic", :name "rem-dom", :file "clojure/core/logic.clj", :type :fn, :src "(defn rem-dom\n  ([s x dom]\n     (let [x (root-var s x)]\n       (rem-dom s x dom nil)))\n  ([s x dom seenset]\n     (let [v (root-val s x)\n           s (if (subst-val? v)\n               (let [new-doms (dissoc (:doms v) dom)]\n                 (if (and (zero? (count new-doms)) (not= (:v v) ::unbound))\n                   (update-var s x (:v v))\n                   (update-var s x (assoc v :doms new-doms))))\n               s)]\n       (sync-eset s v seenset\n         (fn [s y] (rem-dom s y dom (conj (or seenset #{}) x)))))))", :column 1, :line 494, :arglists ([s x dom] [s x dom seenset])}