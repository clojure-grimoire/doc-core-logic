{:ns "clojure.core.logic.unify", :name "prep*", :file "clojure/core/logic/unify.clj", :type :fn, :src "(defn prep*\n  ([expr store] (prep* expr store false false))\n  ([expr store lcons?] (prep* expr store lcons? false))\n  ([expr store lcons? last?]\n     (let [expr (if (and last? (seq expr))\n                  (first expr)\n                  expr)]\n       (cond\n        (lvarq-sym? expr) (proc-lvar expr store)\n        (seq? expr) (if (or lcons? (lcons-expr? expr))\n                      (let [[f & n] expr\n                            skip (= f '.)\n                            tail (prep* n store lcons? skip)]\n                        (if skip\n                          tail\n                          (mk/lcons (prep* f store) tail)))\n                      (postwalk (replace-lvar store) expr))\n        :else expr))))", :column 1, :line 32, :arglists ([expr store] [expr store lcons?] [expr store lcons? last?])}